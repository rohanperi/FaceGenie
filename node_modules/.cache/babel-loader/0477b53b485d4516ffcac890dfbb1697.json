{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/Web Dev/SMARTBRAIN/smartbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nconst app = new Clarifai.App({\n  apiKey: 'ae911bef56424d5697d6a635554bb992'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 60,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLoctions = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, //URL of the image \n      this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => this.setState(Object.assign(this.state.user, {\n            entries: count\n          })));\n        }\n\n        this.displayFaceBox(this.calculateFaceLoctions(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      route,\n      box,\n      imageUrl\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 6\n      }\n    }), route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    })) : route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/user/Desktop/Web Dev/SMARTBRAIN/smartbrain/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Signin","Register","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLoctions","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","console","log","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport Signin from './components/Signin/Signin'\nimport Register from './components/Register/Register'\n\nconst app = new Clarifai.App({\n apiKey: 'ae911bef56424d5697d6a635554bb992'\n});\n\nconst particlesOptions = {\n    particles: {\n    \tnumber: {\n    \t\tvalue: 60,\n    \t\tdensity: {\n    \t\t\tenable: true,\n    \t\t\tvalue_area: 800\n    \t\t}    \n    \t}\n    }\n}\nclass App extends Component {\nconstructor() {\n\tsuper();\n\tthis.state = {\n\t\tinput: '',\n\t\timageUrl: '',\n        box: {},\n        route: 'signin',\n        isSignedIn: false,\n        user: {\n            id: '',\n            name: '',\n            email: '',\n            entries: 0,\n            joined: ''\n        }\n\t}\n}\n\nloadUser = (data) => {\n    this.setState({user: {\n            id: data.id,\n            name: data.name,\n            email: data.email,\n            entries: data.entries,\n            joined: data.joined\n        }}\n    )\n}\n\ncalculateFaceLoctions = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - (clarifaiFace.right_col * width),\n        bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n}\n\ndisplayFaceBox = (box) => {\n    this.setState({box: box});\n}\n\nonInputChange = (event) => {\n\tthis.setState({input: event.target.value})\n}\n\nonButtonSubmit = () => {\n\tthis.setState({imageUrl: this.state.input});\n\tapp.models\n\t.predict(\n\t\tClarifai.FACE_DETECT_MODEL,\n\t\t//URL of the image \n\t    this.state.input)\n\t.then(response => { \n        if(response) {\n            fetch('http://localhost:3000/image', {\n                method: 'put',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                     id: this.state.user.id\n                })\n                })\n                .then(response => response.json())\n                .then(count => this.setState( Object.assign(this.state.user,{ entries: count })))\n                \n            \n        }\n        this.displayFaceBox(this.calculateFaceLoctions(response))\n    })\n\t.catch(err=> console.log(err));\n}\n\nonRouteChange = (route) => {\n    if (route === 'signout') {\n        this.setState({isSignedIn: false});\n    } else if (route === 'home') {\n        this.setState({isSignedIn: true});\n    }\n    this.setState({route: route})\n}\n\nrender() {\n   const { isSignedIn, route, box, imageUrl } = this.state;\n  return (\n    <div className=\"App\">\n    \t<Particles\n    \t\tclassName='particles' \n            params={particlesOptions}  \n        />\n    \t<Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        { route === 'home' \n        ? <div>\n            <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n            <ImageLinkForm \n            onInputChange={this.onInputChange}\n            onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition box={box} imageUrl={imageUrl}/>\n         </div>\n        : ( route === 'signin' \n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        \n    \t \n        }\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}